// generate a column width with a second arg for context base size
@function width($col:1, $base:1) { @return (($col * ($column + $gutter) - $gutter) / $base) / $em; }

// create media query break point based on columns with a second arg for setting a width in columns
@mixin set-bp($bp, $width: false, $content: false) {
	@for $i from 1 through $columns {	 
		@if ($bp == $i) {
			@media (min-width: (width($i) + ($margin * 2))) {
				@if ($width) { width: width($width); }
				@if ($content) { @content }
			}
		}
	}	 
}

// mobile first fluid layout
.container { width: auto; margin-left: $margin; margin-right: $margin; }
.col { float: none; margin-left: 0; width: auto; }

// break point to turn off fluid and go fixed grid (must be fired without a selector on the root)
@mixin set-fixed-bp($bp) {
	@include set-bp($bp, $content: true) {
		.container { margin-left: auto; margin-right: auto; @extend .clearfix; }
		.col { float: left; margin-left: $margin; &:first-child { margin-left: 0; } }
	}
}

// overrides the mobile fluid layout with a fixed grid that isn't tied to a break point
// use for non-responsive designs or a vintage ie fallback
@mixin set-no-bp($width: false) {
	.container { @if ($width) { width: width($width); } margin-left: auto; margin-right: auto; @extend .clearfix; }
	.col { float: left; margin-left: $margin; &:first-child { margin-left: 0; } }
}

// sandbox a set of styles between two breakpoints
@mixin set-sandbox-bp($min, $max) {
	@media (min-width: (width($min) + ($margin * 2))) and (max-width: (width($max) + ($margin * 2))) { @content }
}
