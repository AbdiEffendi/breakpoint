// Variables
// =============================================================================

$grid-column: 60px !default; // can be px, em, or %
$grid-gutter: 20px !default; // can be px, em, or %
$grid-overlay: false !default; // generate visual grid overlay
$ie-support: false !default; // number of columns for IE fallback (must match a breakpoint)
$grid-direction: left !default; // switch to 'right' for rtl

// Functions
// =============================================================================

// column widths for elements with .grid-cell class
@function fixed-cell($col) { @return $col * ( em($grid-column) + em($grid-gutter) ) }
@function fluid-cell($col, $avail) { @return (100% / $avail) * $col; }

// column width for elements not in grid
@function fixed-col($col) { @return $col * ( em($grid-column) + em($grid-gutter) ) - em($grid-gutter) }

// Breakpoint mixin 
// =============================================================================

// create 'label' for mobile
head { width: 0; }

@mixin breakpoint($min, $max: false) {
	@if ($max) {
		// create min/max mq
		@if ($min == 0) {
			@media ( max-width: fixed-cell($max) + em($grid-gutter) ) { @content }
		} @else {
			@media ( min-width: fixed-cell($min) + em($grid-gutter) ) and ( max-width: fixed-cell($max) + em($grid-gutter) ) { @content }
		}	
	} @else {
		// create min width mq	
		@media ( min-width: fixed-cell($min) + em($grid-gutter) ) {
			@if($grid-overlay) { @include grid-overlay($min); }
			// create hook for js
			head { width: #{$min + 'px'}; }
			// proper sizing of wrapper
			.wrapper { width: fixed-cell($min) - em($grid-gutter); margin-left: auto; margin-right: auto; }
			@content
		}
		// ie fallback		
		@if ($ie-support and $min <= $ie-support) {	
			.lt-ie9 {
				.wrapper { width: fixed-cell($min) - em($grid-gutter); margin-left: auto; margin-right: auto; }
				@content
			}
		}
	}
}

// Grid overlay
// =============================================================================

@mixin grid-overlay($col: false) {
	body::after {
		content: ''; position: fixed; top: 0; bottom: 0; pointer-events: none;
		@include background(linear-gradient(left, transparent $grid-gutter,  transparentize(red, .9) $grid-gutter,  transparentize(red, .9) $grid-gutter + $grid-column));
		@if ($col) {
			left: 50%;
			width: fixed-cell($col) + em($grid-gutter); margin-left: fixed-cell($col) / -2 - (em($grid-gutter)/2);
			@include background-size($grid-gutter + $grid-column);
		} @else {
			left: 0; right: $grid-gutter;
			@include background-size(25%);
		}
	}
}
@if($grid-overlay) { @include grid-overlay; }